
/* Base Card Styling */
.hover-card {
  position: relative;
  border-radius: 16px;
  overflow: hidden;
  background-color: rgba(255, 255, 255, 0.05);
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transform-origin: center;
  will-change: transform, box-shadow;
  backface-visibility: hidden;
}

/* Glassmorphism Effect */
.glassmorphism {
  background: rgba(255, 255, 255, 0.07);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 
    0 4px 30px rgba(0, 0, 0, 0.1),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.05);
}

/* Dark Mode Adjustments */
.dark .glassmorphism {
  background: rgba(15, 15, 20, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.06);
}

/* Light Mode Adjustments */
.light .glassmorphism {
  background: rgba(255, 255, 255, 0.7);
  border: 1px solid rgba(0, 0, 0, 0.05);
  box-shadow: 
    0 10px 30px rgba(0, 0, 0, 0.08),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.8);
}

/* Hover Glow Effect */
.hover-glow {
  position: relative;
  z-index: 1;
}

.hover-glow::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  border-radius: inherit;
  opacity: 0;
  transition: opacity 0.5s ease;
  background: radial-gradient(
    circle at var(--x, 50%) var(--y, 50%),
    rgba(94, 96, 206, 0.6) 0%,
    rgba(255, 107, 107, 0.2) 50%,
    transparent 70%
  );
  filter: blur(20px);
}

.hover-glow:hover::before {
  opacity: 1;
}

/* Advanced Hover Interaction */
.hover-glow::after {
  content: '';
  position: absolute;
  inset: 0;
  z-index: -1;
  border-radius: inherit;
  opacity: 0;
  transition: opacity 0.5s cubic-bezier(0.23, 1, 0.32, 1);
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.2) 0%,
    rgba(255, 255, 255, 0) 50%
  );
}

.hover-glow:hover::after {
  opacity: 1;
}

/* Soft Shadow Effect */
.glassmorphism:hover {
  box-shadow: 
    0 15px 40px rgba(0, 0, 0, 0.2),
    0 5px 15px rgba(0, 0, 0, 0.1),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.1);
}

.light .glassmorphism:hover {
  box-shadow: 
    0 15px 40px rgba(0, 0, 0, 0.12),
    0 5px 15px rgba(0, 0, 0, 0.05),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.9);
}

/* Border Gradient Animation */
@keyframes borderFlow {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.hover-glow::before {
  border: 1px solid transparent;
  background-clip: padding-box, border-box;
  background-origin: padding-box, border-box;
  background-image: 
    linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)),
    linear-gradient(135deg, #5e60ce, #ff6b6b, #5e60ce);
  background-size: 300% 300%;
  animation: borderFlow 8s ease infinite;
}

/* Card Inner Content Spacing */
.glassmorphism > * {
  position: relative;
  z-index: 2;
}

/* Reflection Effect */
.glassmorphism::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.15) 0%,
    rgba(255, 255, 255, 0) 60%
  );
  transform: translateY(-100%);
  transition: transform 0.6s cubic-bezier(0.33, 1, 0.68, 1);
}

.glassmorphism:hover::before {
  transform: translateY(100%);
}

/* Dynamic Mouse-tracking Glow Effect */
.hover-glow {
  --x: 50%;
  --y: 50%;
}

.hover-glow:hover {
  --x: var(--mouse-x, 50%);
  --y: var(--mouse-y, 50%);
}

/* Beautiful text shadow for card content */
.glassmorphism h1,
.glassmorphism h2,
.glassmorphism h3,
.glassmorphism h4 {
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);
  transition: text-shadow 0.3s ease;
}

.glassmorphism:hover h1,
.glassmorphism:hover h2,
.glassmorphism:hover h3,
.glassmorphism:hover h4 {
  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

/* Custom border radius utility classes */
.rounded-xl {
  border-radius: 12px;
}

.rounded-2xl {
  border-radius: 16px;
}

.rounded-3xl {
  border-radius: 24px;
}

.rounded-full {
  border-radius: 9999px;
}

/* Additional card variants */
.card-primary {
  background: linear-gradient(135deg, rgba(94, 96, 206, 0.2), rgba(94, 96, 206, 0.1));
  border: 1px solid rgba(94, 96, 206, 0.3);
}

.card-accent {
  background: linear-gradient(135deg, rgba(255, 107, 107, 0.2), rgba(255, 107, 107, 0.1));
  border: 1px solid rgba(255, 107, 107, 0.3);
}

.card-success {
  background: linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(16, 185, 129, 0.1));
  border: 1px solid rgba(16, 185, 129, 0.3);
}

/* Gradient backdrops */
.gradient-backdrop::before {
  content: '';
  position: absolute;
  width: 150%;
  height: 150%;
  background: radial-gradient(
    circle at center,
    var(--backdrop-color, rgba(94, 96, 206, 0.15)) 0%,
    transparent 60%
  );
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: -1;
  opacity: 0;
  transition: opacity 0.5s ease;
}

.gradient-backdrop:hover::before {
  opacity: 1;
}

/* Floating particle effect */
@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

.floating-particle {
  position: absolute;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  z-index: -1;
  animation: float 5s ease infinite;
}

.glassmorphism:hover .floating-particle:nth-child(1) {
  top: 10%;
  left: 10%;
  animation-delay: 0s;
}

.glassmorphism:hover .floating-particle:nth-child(2) {
  top: 20%;
  right: 15%;
  animation-delay: 0.5s;
}

.glassmorphism:hover .floating-particle:nth-child(3) {
  bottom: 15%;
  left: 25%;
  animation-delay: 1s;
}

/* Media queries for responsive adjustments */
@media (max-width: 768px) {
  .glassmorphism {
    backdrop-filter: blur(8px);
  }
  
  .hover-glow::before {
    filter: blur(15px);
  }
}

@media (prefers-reduced-motion) {
  .hover-glow::before,
  .hover-glow::after {
    animation: none;
    transition: none;
  }
  
  .glassmorphism::before {
    transition: none;
  }
}

/* Card click feedback */
.glassmorphism:active {
  transform: scale(0.98);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease;
}

/* Add support for dark and light image handling */
.dark .glassmorphism img {
  filter: brightness(1.05) contrast(1.05);
}

.light .glassmorphism img {
  filter: brightness(1) contrast(1);
}

/* Initialize mouse tracking for dynamic effects */
:root {
  --mouse-x: 50%;
  --mouse-y: 50%;
}


